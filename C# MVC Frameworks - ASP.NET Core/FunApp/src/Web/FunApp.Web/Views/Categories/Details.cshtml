@using X.PagedList
@using X.PagedList.Mvc.Core

@model IPagedList<FunApp.Services.Models.Jokes.JokeSimpleViewModel>
@{
}

<div class="container" style="margin-top:20px">
    @for (int i = 0; i < Model.Count(); i++)
    {
        <a asp-controller="Jokes"
           asp-action="Details"
           asp-route-id="@Model[i].Id">
            @Model[i].Content
        </a>

        <input type="number" min="1" max="5" class="rating_@Model[i].Id"/> 
        <button class="btn btn-info rateButton" data-item-id="@Model[i].Id">Rate</button>

        if (i != @Model.Count() - 1)
        {
            <hr />
        }
    }
</div>

@Html.PagedListPager(Model, page => Url.Action("Details", "Categories", new { page }))

<script>
    $(function () {
        $('.rateButton').click(function (e) {
            var rateButton = $(e.target);
            var jokeId = rateButton.attr('data-item-id');
            var ratingSelector = '.rating_' + jokeId;
            var rating = $(ratingSelector).val();

            if (rating !== 0) {
                $.post("/Jokes/RateJoke", { jokeId, rating })
                    .done(function(data) {
                        alert(data);
                    });
            }
         
        });
    });
</script>
